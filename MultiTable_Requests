---1---
SELECT st.name, st.surname, hb.name
FROM student st,
	 hobby hb,
	 student_hobby sth
WHERE st.id= sth.student_id
AND hb.id= sth.hobby_id
AND sth.date_finish IS NOT null


---2---
SELECT stc.name, stc.surname, stc.n_group, h.name
FROM
	(
		SELECT st.*, sth.*
		FROM student st,
			 student_hobby sth,
			 hobby h
		WHERE st.id = sth.student_id 
			  AND h.id = sth.hobby_id
			  AND sth.date_finish IS null
		ORDER BY sth.date_start ASC LIMIT 1
	) stc,
	hobby h
WHERE h.id = stc.hobby_id


---3---
SELECT st.name, st.surname, st.id, st.date_birth
FROM student st
WHERE st.score > (SELECT AVG(score) FROM student)
	  AND (SELECT SUM(risk) FROM hobby h WHERE h.id in (SELECT sth.hobby_id FROM student_hobby sth where sth.date_finish IS null AND sth.student_id = st.id)) >= 0.9


---4---
SELECT st.name,st.surname,st.id,st.date_birth,h.name,(extract (year from age(sth.date_finish,sth.date_start)))*12 + (extract (month from age(sth.date_finish,sth.date_start))) as hobby_time
FROM student st
INNER JOIN student_hobby sth
ON st.id = sth.student_id
INNER JOIN hobby h
ON h.id = sth.hobby_id
WHERE sth.date_finish is not null


---5---
SELECT st.name,st.surname,st.id,st.date_birth
FROM student st
WHERE (SELECT COUNT(student_id) from student_hobby sth where date_finish is null AND st.id = sth.student_id ) > 1 AND (extract (year from age(now(),st.date_birth))) > 12


---6---
SELECT AVG(st.score)::numeric(3,2),st.n_group
FROM student st
WHERE (SELECT COUNT(student_id) from student_hobby sth where date_finish is null AND st.id = sth.student_id ) >= 1
GROUP BY st.n_group


---7---
SELECT h.name, h.risk, (extract (year from age(now(),sth.date_start)))*12 + (extract (month from age(now(),sth.date_start))) as hobby_time
FROM hobby h
INNER JOIN student_hobby sth
ON h.id = sth.hobby_id
WHERE sth.student_id = 2 AND sth.date_finish IS null
ORDER BY hobby_time DESC


---8---
SELECT h.name,h.risk
FROM hobby h, student st, student_hobby sth
WHERE st.score = (SELECT MAX(score) FROM student) AND st.id = sth.student_id AND sth.hobby_id = h.id


---9---
SELECT h.name,h.risk,h.id
FROM hobby h
INNER JOIN student_hobby sth
ON h.id = sth.hobby_id
INNER JOIN student st
ON st.id = sth.student_id
WHERE sth.date_finish is null AND st.n_group::varchar like '4%' AND st.score < 4


---10---
SELECT cntrgen.course
FROM 
(
	SELECT LEFT(st.n_group::varchar, 1) AS Course,COUNT(st.id) as gen
	FROM 
	student st
	group by course
) as cntrgen
INNER JOIN
(
	SELECT LEFT(st.n_group::varchar, 1) as course, COUNT(st.id) as hob
	FROM 
	student st
	where (select count(sth.student_id) from student_hobby sth where sth.student_id = st.id AND sth.date_finish is null) > 1
	group by course
) as cntrhob
ON cntrgen.course = cntrhob.course
where cntrhob.hob > cntrgen.gen/2


---11---
SELECT st.n_group
FROM student st
WHERE (SELECT COUNT(id) from student where n_group = st.n_group)*0.6 <= (SELECT COUNT(id) from student where n_group = st.n_group AND score >= 4)
GROUP BY st.n_group


---12---
SELECT LEFT(st.n_group::varchar, 1) AS Course, COUNT(distinct sth.hobby_id)
FROM student st
INNER JOIN student_hobby sth
ON sth.student_id = st.id
WHERE sth.date_finish IS null
GROUP BY course


---13---
SELECT DISTINCT *
FROM
(
	SELECT st.id, st.name, st.surname, st.date_birth, LEFT(st.n_group::varchar, 1) AS Course
	FROM student st
	LEFT JOIN student_hobby sth
	ON st.id = sth.student_id
	WHERE (sth.id is null OR (SELECT COUNT(*) FROM student_hobby sth WHERE sth.student_id = st.id AND sth.date_finish IS NOT null GROUP BY st.id) 
	= (SELECT COUNT(*) FROM student_hobby sth WHERE sth.student_id = st.id GROUP BY st.id)) AND score > 4
	
	ORDER BY course ASC, st.date_birth DESC
) as sts


---14---
CREATE OR REPLACE VIEW students_h5 AS
SELECT DISTINCT st.* FROM student st INNER JOIN student_hobby sth
ON st.id = sth.student_id
WHERE sth.date_finish IS null AND (EXTRACT (YEAR FROM age(now(),sth.date_start))) >= 5


---15---
SELECT h.*,COUNT(DISTINCT sth.student_id)
FROM hobby h INNER JOIN student_hobby sth
ON h.id = sth.hobby_id
WHERE sth.date_finish IS null
GROUP BY h.id, h.name, h.risk


---16---
CREATE OR REPLACE VIEW pop_hobby AS
SELECT hc.id 
FROM
(
	SELECT h.id, COUNT(DISTINCT sth.student_id) as scnt from hobby h INNER JOIN student_hobby sth ON h.id = sth.hobby_id GROUP BY h.id ORDER BY scnt DESC LIMIT 1 
) as hc


---17---
SELECT st.* 
FROM student st
INNER JOIN student_hobby sth
ON sth.student_id = st.id
INNER JOIN pop_hobby ph
ON ph.id = sth.hobby_id
WHERE sth.date_finish IS null


---18---
SELECT h.id
FROM hobby h
ORDER BY h.risk DESC LIMIT 3


---19---
CREATE OR REPLACE VIEW longest_hobby_students AS
SELECT DISTINCT s_t.id,s_t.name,s_t.surname
FROM 
(
	SELECT st.*,(now()-sth.date_start) as h_time
	FROM student st 
	INNER JOIN student_hobby sth
	ON st.id = sth.student_id
	WHERE sth.date_finish is null
	ORDER BY h_time DESC
) as s_t
LIMIT 10


---20---
SELECT DISTINCT lh.n_group
FROM longest_hobby_students lh


---21---
SELECT 	st.id,
   	st.name,
   	st.surname
FROM student st;


---22---
SELECT 	chc.course,
    	h.name AS hobby_name
FROM ( 	
	SELECT 	DISTINCT ON (("left"(st.n_group::character varying::text, 1))) "left"(st.n_group::character varying::text, 1) AS course,
            	sth.hobby_id,
            	count(*) AS cnt
       	FROM student st
       	JOIN student_hobby sth ON st.id = sth.student_id
	GROUP BY ("left"(st.n_group::character varying::text, 1)), sth.hobby_id
	ORDER BY ("left"(st.n_group::character varying::text, 1)), (count(*)) DESC
     ) chc
JOIN hobby h ON chc.hobby_id = h.id;


---23---
 SELECT "left"(st.n_group::character varying::text, 1) AS course,
    h.name
   FROM student st
     JOIN student_hobby sth ON st.id = sth.student_id
     JOIN hobby h ON sth.hobby_id = h.id
  WHERE "left"(st.n_group::character varying::text, 1) = '2'::text
  ORDER BY h.risk DESC
 LIMIT 1;


---24---
 SELECT t1.course,
    t1.cntg,
    t2.cntf
   FROM ( SELECT "left"(st.n_group::character varying::text, 1) AS course,
            count(*) AS cntg
           FROM student st
          GROUP BY ("left"(st.n_group::character varying::text, 1))) t1
     JOIN ( SELECT "left"(st.n_group::character varying::text, 1) AS course,
            count(*) AS cntf
           FROM student st
          WHERE st.score > 4::numeric
          GROUP BY ("left"(st.n_group::character varying::text, 1))) t2 ON t1.course = t2.course;'


---25---
 SELECT ht.name
   FROM ( SELECT h.name,
            count(*) AS count
           FROM hobby h
             JOIN student_hobby sth ON h.id = sth.hobby_id
          GROUP BY h.name
          ORDER BY (count(*)) DESC
         LIMIT 1) ht;


---26---
 SELECT student.name,
    student.surname,
    student.date_birth,
    student.n_group
   FROM student;
