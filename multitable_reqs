---1---
SELECT st.name, st.surname, hb.name
FROM student st,
	 hobby hb,
	 student_hobby sth
WHERE st.id= sth.student_id
AND hb.id= sth.hobby_id
AND sth.date_finish IS NOT null
---2---
SELECT stc.name, stc.surname, stc.n_group, h.name
FROM
	(
		SELECT st.*, sth.*
		FROM student st,
			 student_hobby sth,
			 hobby h
		WHERE st.id = sth.student_id 
			  AND h.id = sth.hobby_id
			  AND sth.date_finish IS null
		ORDER BY sth.date_start ASC LIMIT 1
	) stc,
	hobby h
WHERE h.id = stc.hobby_id
---3---
SELECT st.name, st.surname, st.id, st.date_birth
FROM student st
WHERE st.score > (SELECT AVG(score) FROM student)
	  AND (SELECT SUM(risk) FROM hobby h WHERE h.id in (SELECT sth.hobby_id FROM student_hobby sth where sth.date_finish IS null AND sth.student_id = st.id)) >= 0.9
---4---
SELECT st.name,st.surname,st.id,st.date_birth,h.name,(extract (year from age(sth.date_finish,sth.date_start)))*12 + (extract (month from age(sth.date_finish,sth.date_start))) as hobby_time
FROM student st
INNER JOIN student_hobby sth
ON st.id = sth.student_id
INNER JOIN hobby h
ON h.id = sth.hobby_id
WHERE sth.date_finish is not null
---5---
SELECT st.name,st.surname,st.id,st.date_birth
FROM student st
WHERE (SELECT COUNT(student_id) from student_hobby sth where date_finish is null AND st.id = sth.student_id ) > 1 AND (extract (year from age(now(),st.date_birth))) > 12
---6---
SELECT AVG(st.score)::numeric(3,2),st.n_group
FROM student st
WHERE (SELECT COUNT(student_id) from student_hobby sth where date_finish is null AND st.id = sth.student_id ) >= 1
GROUP BY st.n_group
---7---
SELECT h.name, h.risk, (extract (year from age(now(),sth.date_start)))*12 + (extract (month from age(now(),sth.date_start))) as hobby_time
FROM hobby h
INNER JOIN student_hobby sth
ON h.id = sth.hobby_id
WHERE sth.student_id = 2 AND sth.date_finish IS null
ORDER BY hobby_time DESC
---8---
SELECT h.name,h.risk
FROM hobby h, student st, student_hobby sth
WHERE st.score = (SELECT MAX(score) FROM student) AND st.id = sth.student_id AND sth.hobby_id = h.id
---9---
SELECT h.name,h.risk,h.id
FROM hobby h
INNER JOIN student_hobby sth
ON h.id = sth.hobby_id
INNER JOIN student st
ON st.id = sth.student_id
WHERE sth.date_finish is null AND st.n_group::varchar like '4%' AND st.score < 4
---10---
SELECT cntrgen.course
FROM 
(
	SELECT CASE
	WHEN st.n_group::varchar LIKE '1%' THEN '1'
	WHEN st.n_group::varchar LIKE '2%' THEN '2'
	WHEN st.n_group::varchar LIKE '3%' THEN '3'
	WHEN st.n_group::varchar LIKE '4%' THEN '4'
	END AS Course,COUNT(st.id) as gen
	FROM 
	student st
	group by course
) as cntrgen
INNER JOIN
(
	SELECT CASE
	WHEN st.n_group::varchar LIKE '1%' THEN '1'
	WHEN st.n_group::varchar LIKE '2%' THEN '2'
	WHEN st.n_group::varchar LIKE '3%' THEN '3'
	WHEN st.n_group::varchar LIKE '4%' THEN '4'
	END AS Course, COUNT(st.id) as hob
	FROM 
	student st
	where (select count(sth.student_id) from student_hobby sth where sth.student_id = st.id AND sth.date_finish is null) > 1
	group by course
) as cntrhob
ON cntrgen.course = cntrhob.course
where cntrhob.hob > cntrgen.gen/2
